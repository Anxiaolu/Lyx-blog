#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
负载均衡-Session处理策略
\end_layout

\begin_layout Section
问题描述
\end_layout

\begin_layout Subsection
先来了解一下Session是什么
\end_layout

\begin_layout Paragraph*
Session在计算机中,被称为＂会话控制＂．Session对象储存特定用户回话所需的属性及配置信息.这样,当用户在应用程序的web页之间跳转时,存储在Sessi
on对象中的变量将不会丢失,而是在整个用户的会话中一种存在下去.
\end_layout

\begin_layout Subsection
问题深入
\end_layout

\begin_layout Paragraph*
在Tomcat中,Session实际上就是我们在内存中的一段空间.当我们的用户要在服务器上存储一个信息的时候,tomcat会在自己本机的内存空间里开辟一个位置来存
储这个信息.多个用户构成一个集合,所以的都是在tomcat自己的内存空间里的,所以说只是存在本机的空间里的.
\end_layout

\begin_layout Paragraph*
\begin_inset Graphics
	filename imgs/Nginx/Nginx负载均衡图解.png
	lyxscale 25
	scale 25

\end_inset


\end_layout

\begin_layout Paragraph*
那么在负载均衡的情况下,如上图,如果用户之前访问被分配到tomcat1,这个时候存储在Session中一个值,而后第二次访问被分配到tomcat2这种情况下,按
照我们之前的考虑思路,肯定是获取不到相应的Session信息.这就是我们在分布式的负载均衡的情况下Session存在的问题.
\end_layout

\begin_layout Subsection
通常情况下有3种策略
\end_layout

\begin_layout Subsubsection
类似于ip_hash的用户锁定的方式(不容错的方案)
\end_layout

\begin_layout Paragraph*
将用户锁定到某一台机器上,比如说把同一个用户的请求锁定到tomcat1上,那么这个用户只能访问tomcat1,那么他的第二次,第三次,第n次访问的都是同一个to
mcat,就不会出现之前所说的问题.这种处理方式简单,但是缺乏容错性,如果因为某种原因该台机器挂掉,那么后续的请求转发到其他服务器上,那么用户的session状态
就会丢失,就会感知到错误的发生.比如说他突然发现自己本来的登录状态成了未登录状态.缺点虽说是这个样子,是可以接受的.因为它的发生几率还是极低的,考虑到具体的应用场景来
说,在某些方面是可以应用的.说它的发生概率低是因为一个正常运行的集群系统,如果说经常会发生服务器挂掉,要么就是你的硬件出了问题,要么就是你的应用出了问题;再者就是
要考虑当放生错误的额时候,对用户的业务产生多大的影响.
\end_layout

\begin_layout Subsubsection
Session复制(有容错功能的方案)
\end_layout

\begin_layout Paragraph
在集群环境中,当其任何一台服务器上的Session状态或者信息发生改变的时候,在这种情况出现的时候,它会向整个网络里发送广播,通知它的Session改变事件,其
他的服务器有接受广播的功能,在接收到消息之后,会将Session进行对应的改变,达到同步的目的.它的优点显而易见,除了容错性之外,还有就是Session同步的功能.
但是缺点也挺明显,首先它发送的是网络广播,一台服务器Session的改变就要发送广播,其他的都要发生改变,会对网络造成特别大的压力.尤其是当你集群中的服务器特别多
,tomcat特别多,在就是Session的数据量特别大的时候,像这种大批量的网络复制会极大地消耗后端性能,甚至造成网络的阻塞或者瘫痪.所以说该种方案最大的缺陷就
是性能的低下甚至会造成一些列的故障.
\end_layout

\end_body
\end_document
