#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
消息中间件之MQ技术
\end_layout

\begin_layout Standard
之前关于消息中间件的在上一篇已经讲到,这里不再进行更多的叙述,这次讲的是Java 中JMS和AMQP的一些相关概念以及JMS的规范.
\end_layout

\begin_layout Section*
什么是JMS(记住不是一个协议,只是一个规范)
\end_layout

\begin_layout Standard
Java消息服务(Java Message Service)即JMS,是一个Java平台中关于面向消息中间件的API,用于两个应用程序之间,或者分布式系统中发送
消息,进行异步通信.它便于消息系统中的Java应用程序进行消息交换,并且通过提供标准的产生,发送,接受消息的接口简化企业应用的开发.
\end_layout

\begin_layout Standard
JMS本身只定义了一系列的接口规范，是一种与厂商无关的 API，用来访问消息收发系统。它类似于 JDBC(java Database Connectivity)
：这里，JDBC 是可以用来访问许多不同关系数据库的 API，而 JMS 则提供同样与厂商无关的访问方法，以访问消息收发服务。许多厂商目前都支持
 JMS，包括 IBM 的 MQSeries、BEA的 Weblogic JMS service和 Progress 的 SonicMQ，这只是几个例子。
 JMS 使您能够通过消息收发服务（有时称为消息中介程序或路由器）从一个 JMS 客户机向另一个 JML 客户机发送消息。消息是 JMS 中的一种类型对象，由两
部分组成：报头和消息主体。报头由路由信息以及有关该消息的元数据组成。消息主体则携带着应用程序的数据或有效负载。根据有效负载 的类型来划分，可以将消息分为几种类型
，它们分别携带：简单文本 (TextMessage)、可序列化的对象 (ObjectMessage)、属性集合 (MapMessage)、字节流
 (BytesMessage)、原始值流 (StreamMessage)，还有无有效负载的消息 (Message)。
\end_layout

\begin_layout Section*
AMQP概念(是一个协议)
\end_layout

\begin_layout Standard
AMQP(advanced message queuing protocol)是一个提供统一消息服务的应用标准协议,基于此协议的客户端与消息中间件可传递消息,并
不受客户端/中间件不同产品,不通开发语言等条件限制.
\end_layout

\begin_layout Section*
JMS和AMQP对比图
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ../../imgs/Java/diff_jms_amqp.png

\end_inset


\end_layout

\begin_layout Section*
常见的中间件对比
\end_layout

\begin_layout Subsection*
ActiveMQ
\end_layout

\begin_layout Standard
ActiveMQ是Apache出品,最流行的,能力枪金的开源消息总线.ActiveMQ是一个完全支持JMS1.1和J2EE1.4规范的JMS Provider实现,尽
管JMS出现时间比较长,但是地位依然重要.它不仅支持java语言,也支持多种其他语言和协议编写客户端.
\end_layout

\begin_layout Itemize
语言(除JAVA之外):C,C++,C#,Ruby,Perl,Python,PHP.
\end_layout

\begin_layout Itemize
应用协议:OpenWire,Stomp RERST,WS Notification,XMPP,AMQP.
\end_layout

\begin_layout Itemize
支持JMS1.1和J2EE1.4规范(持久化,XA消息,事务)
\end_layout

\begin_layout Itemize
除此之外的高级特性:虚拟主题,组合目的,镜像队列.
\end_layout

\begin_layout Subsection*
RabbitMQ
\end_layout

\begin_layout Standard
是一个开源的AMQP实现,服务端使用的Erlang语言编写,用在分布式系统中存储转发消息,在易用性,扩展性,高可用性等方面表现不俗.
\end_layout

\begin_layout Itemize
语言支持:Python,Ruby,.NET,Java,JMS,C,PHP,ActionSctipt等.
\end_layout

\begin_layout Itemize
AMQP的完整实现(vhost,Exchange,Binding,Routing Key等)
\end_layout

\begin_layout Itemize
事务支持/发布确认
\end_layout

\begin_layout Itemize
消息持久化
\end_layout

\begin_layout Subsection*
Kafka
\end_layout

\begin_layout Standard
Kafka是一种高吞吐量的分布式发布订阅消息系统,是一个分布式的,分区的,可靠地分布式日志存储服务.
\end_layout

\begin_layout Standard
特性:
\end_layout

\begin_layout Itemize
通过O(1)的磁盘数据结构提供消息的持久化,这种结构对于即使数以TB的消息存储也能够保持长时间的稳定性
\end_layout

\begin_layout Itemize
高吞吐量:即使是非常普通的硬件Kafka也可以支持每秒数百万的消息.
\end_layout

\begin_layout Itemize
Partition,Consumer Group,有分区和消息消费者的分组.
\end_layout

\begin_layout Section*
三种中间件对比
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ../../imgs/Java/diff_threemq.png

\end_inset


\end_layout

\begin_layout Standard
针对以上对比分析,一般经常用到的是ActiveMQ了.所以在下面几章会降到ActiveMQ的示例.
\end_layout

\end_body
\end_document
